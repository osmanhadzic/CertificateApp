// <auto-generated />
using System;
using DCCS.Web.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CerificateApp.Entites.Migrations
{
    [DbContext(typeof(DCCSContext))]
    [Migration("20211101192408_tablecomments")]
    partial class tablecomments
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.11");

            modelBuilder.Entity("CerificateApp.Entites.Models.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CommentText")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("DataComment")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("UserId");

                    b.ToTable("Comment");
                });

            modelBuilder.Entity("CerificateApp.Entites.Models.Supplier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("SupplierIndex")
                        .HasColumnType("int");

                    b.Property<string>("SupplierName")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("Supplier");
                });

            modelBuilder.Entity("CerificateApp.Entites.Models.UploadFile", b =>
                {
                    b.Property<int>("DocumentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("DocumentName")
                        .HasColumnType("longtext");

                    b.Property<byte[]>("File")
                        .HasColumnType("longblob");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("DocumentId");

                    b.HasIndex("DocumentId")
                        .IsUnique();

                    b.ToTable("UploadFile");
                });

            modelBuilder.Entity("DCCS.Web.Entities.Models.Certificate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<int?>("CertificateTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateFrom")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateTo")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("SupplierId")
                        .HasColumnType("int");

                    b.Property<int?>("UploadFileDocumentId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CertificateTypeId");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("SupplierId");

                    b.HasIndex("UploadFileDocumentId");

                    b.HasIndex("UserId");

                    b.ToTable("Certificates");
                });

            modelBuilder.Entity("DCCS.Web.Entities.Models.CertificateType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CertificateTypeName")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("CertificateType");
                });

            modelBuilder.Entity("DCCS.Web.Entities.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<Guid?>("CertificateId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Department")
                        .HasMaxLength(60)
                        .HasColumnType("varchar(60)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("LastName")
                        .HasMaxLength(60)
                        .HasColumnType("varchar(60)");

                    b.Property<string>("Name")
                        .HasMaxLength(60)
                        .HasColumnType("varchar(60)");

                    b.Property<int>("Plant")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CertificateId");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("User");
                });

            modelBuilder.Entity("CerificateApp.Entites.Models.Comment", b =>
                {
                    b.HasOne("DCCS.Web.Entities.Models.User", "User")
                        .WithMany("Comments")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DCCS.Web.Entities.Models.Certificate", b =>
                {
                    b.HasOne("DCCS.Web.Entities.Models.CertificateType", "CertificateType")
                        .WithMany("Certificates")
                        .HasForeignKey("CertificateTypeId");

                    b.HasOne("CerificateApp.Entites.Models.Supplier", "Supplier")
                        .WithMany()
                        .HasForeignKey("SupplierId");

                    b.HasOne("CerificateApp.Entites.Models.UploadFile", "UploadFile")
                        .WithMany()
                        .HasForeignKey("UploadFileDocumentId");

                    b.HasOne("DCCS.Web.Entities.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("CertificateType");

                    b.Navigation("Supplier");

                    b.Navigation("UploadFile");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DCCS.Web.Entities.Models.User", b =>
                {
                    b.HasOne("DCCS.Web.Entities.Models.Certificate", null)
                        .WithMany("Participant")
                        .HasForeignKey("CertificateId");
                });

            modelBuilder.Entity("DCCS.Web.Entities.Models.Certificate", b =>
                {
                    b.Navigation("Participant");
                });

            modelBuilder.Entity("DCCS.Web.Entities.Models.CertificateType", b =>
                {
                    b.Navigation("Certificates");
                });

            modelBuilder.Entity("DCCS.Web.Entities.Models.User", b =>
                {
                    b.Navigation("Comments");
                });
#pragma warning restore 612, 618
        }
    }
}
